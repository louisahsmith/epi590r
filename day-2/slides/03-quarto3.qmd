---
title: "Quarto tables, figures, and stats"
format: revealjs
execute: 
  eval: true
---

## Chunks can produce figures and tables

```{r}
#| echo: false
library(tidyverse)
nlsy_cols <- c("glasses", "eyesight", "sleep_wkdy", "sleep_wknd", 
               "id", "nsibs", "samp", "race_eth", "sex", "region", 
               "income", "res_1980", "res_2002", "age_bir")
nlsy <- read_csv(here::here("data", "nlsy.csv"), 
                 na = c("-1", "-2", "-3", "-4", "-5", "-998"),
                 skip = 1, col_names = nlsy_cols) |> 
  mutate(region_cat = factor(region, labels = c("Northeast", "North Central", "South", "West")),
         sex_cat = factor(sex, labels = c("Male", "Female")),
         race_eth_cat = factor(race_eth, labels = c("Hispanic", "Black", "Non-Black, Non-Hispanic")),
         eyesight_cat = factor(eyesight, labels = c("Excellent", "Very good", "Good", "Fair", "Poor"))) 
```

```{r}
#| echo: fenced
#| label: tbl-one
#| tbl-cap: "This is a great table"
knitr::kable(mtcars)
```

## Chunks can produce figures or tables

```{r}
#| echo: fenced
#| label: fig-hist
#| fig-cap: "This is a histogram"
hist(rnorm(100))
```


## Cross-referencing

You can then refer to those with `@tbl-one` and `@fig-hist` and the Table and Figure ordering will be correct (and linked)

::: larger-code
```         
@fig-hist contains a histogram and @tbl-one a table.
```
:::

gets printed as:

@fig-hist contains a histogram and @tbl-one a table.

## Inline R

Along with just regular text, you can also run R code *within* the text:

::: larger-code
```
There were `r knitr::inline_expr("3 + 4")` participants
```
:::
becomes:

There were `r 3 + 4` participants

## Inline R

This is helpful for reporting statistics, e.g. the sample size:

::: larger-code
```
There were `r knitr::inline_expr("nrow(nlsy)")` participants
```
:::
becomes:

There were `r 12686` participants

## Inline stats

You can also create an object in a chunk and then reference it later in the text

```{r}
#| echo: fenced
total_sample <- nrow(nlsy)
```

::: larger-code
```
There were `r knitr::inline_expr("total_sample")` participants
```
:::

## Inline stats (aside)

I often create a list of stats that I want to report in a manuscript:

```{r}
#| eval: false
stats <- list(n = nrow(data),
              mean_age = mean(data$age))
```

I can then print these numbers in the text with:

```{r}
#| echo: false
stats <- list(n = 1123,
              mean_age = 43.5)
```

There were `` `r knitr::inline_expr("stats$n")` `` participants with a mean age of `` `r knitr::inline_expr("stats$mean_age")` ``.

which turns into:

There were `r stats$n` participants with a mean age of `r stats$mean_age`.

## Inline stats from `{gtsummary}`

We saw very, very briefly yesterday:
```{r}
library(gtsummary)
income_table <- tbl_uvregression(
  nlsy,
  y = income,
  include = c(
    sex_cat, race_eth_cat,
    eyesight_cat, income, age_bir
  ),
  method = lm
)
```
```{r}
inline_text(income_table, variable = "age_bir")
```
We pulled a statistic from our univariate table

## If we're making a table, we probably want to report numbers from it

```{r}
#| echo: fenced
#| label: tbl-descr
#| tbl-cap: "Descriptive statistics"
#| output-location: slide
table1 <- tbl_summary(
  nlsy,
  by = sex_cat,
  include = c(sex_cat, race_eth_cat, region_cat,
              eyesight_cat, glasses, age_bir)) |> 
  add_overall(last = TRUE)
table1
```

## I want to report some stats!

The help file for `inline_text()` is helpful and tells us that we can look at `table1$table_body` to help figure out what data to extract.

How about the median (IQR) age of the male participants at the birth of their first child?
```{r}
inline_text(table1, variable = "age_bir", column = "stat_1")
```

## Formatting

We can add sample sizes for the  overall stats on people who wear glasses using the `pattern = ` argument:
```{r}
inline_text(table1, variable = "glasses", column = "stat_0",
            pattern = "{n}/{N} ({p}%)")
```

## Formatting for regression statistics

Remove some details:
```{r}
inline_text(income_table, variable = "age_bir")
inline_text(income_table, variable = "age_bir",
            pattern = "{estimate} ({conf.low}, {conf.high})")
```

## Better yet...

We can integrate these into the text of our manuscript:

::: larger-code
```
A greater proportion of female (`r knitr::inline_expr('inline_text(table1, variable = "glasses", column = "stat_2")')`) than male 

(`r knitr::inline_expr('inline_text(table1, variable = "glasses", column = "stat_1")')`) participants wore glasses.
```
:::

Which becomes:

A greater proportion of female (`r inline_text(table1, variable = "glasses", column = "stat_2")`) than male (`r inline_text(table1, variable = "glasses", column = "stat_1")`) participants wore glasses.

## Readability

Because this can be hard to read, I'd suggest storing those stats in a chunk before the text:

````
```{{r}}
glasses_f <- inline_text(table1, variable = "glasses", 
                         column = "stat_2")
glasses_m <- inline_text(table1, variable = "glasses", 
                         column = "stat_1")
```
A greater proportion of female (`r knitr::inline_expr('glasses_f')`) than male (`r knitr::inline_expr('glasses_m')`) participants wore glasses.
````

## Exercises

Return to the quarto document with the tables.

- Choose a table to label and caption, and then write a sentence that *cross-references* it (e.g., Table 1 shows the descriptive statistics)
- Edit or create a new table that has the median hours of sleep on weekends in it (in the overall sample).
- Pull that value from a table.